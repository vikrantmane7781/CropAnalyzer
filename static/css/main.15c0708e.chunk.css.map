{"version":3,"sources":["main.15c0708e.chunk.css","webpack://src/index.css","webpack://src/styles/Footer.css","webpack://src/App.css","webpack://src/styles/NavBar.scss","webpack://src/styles/include-media.scss","webpack://src/styles/Header.scss","webpack://src/styles/Crop.scss","webpack://src/styles/main.scss"],"names":[],"mappings":"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","file":"main.15c0708e.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Open+Sans&display=swap);\n\n\n* {\n    font-family: \"Montserrat\";\n    \n  }\n  /* width */\n  ::-webkit-scrollbar {\n  width: 10px;\n  }\n  \n  /* Track */\n  ::-webkit-scrollbar-track {\n  background: #ffffff; \n  }\n  \n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n  background: rgb(255, 255, 255); \n  }\n.Footer {\n    box-sizing: border-box;\n    min-height: 34px;\n    width: 100%;\n    padding: 1rem 15px;\n  \n  \n    bottom: 0;\n  \n    display: -webkit-flex;\n  \n    display: flex;\n    -webkit-flex-flow: row wrap;\n            flex-flow: row wrap;\n    -webkit-justify-content: space-between;\n            justify-content: space-between;\n    -webkit-align-items: center;\n            align-items: center;\n  \n    text-align: center;\n    word-spacing: 0.25rem;\n  \n    background-color: var(--background-color-2);\n    box-shadow: 0px -2px 1px -1px rgba(0, 0, 0, 0.2);\n  \n    transition: background-color 500ms ease-in-out;\n  }\n  \n  .Footer__Items {\n   \n    display:-webkit-flex;\n   \n    display:flex;\n    -webkit-flex-direction: row;\n            flex-direction: row;\n    -webkit-justify-content: flex-end;\n            justify-content: flex-end;\n  }\n  ._git{\n    max-height: 30px;\n  }\n  .linked_in{\n    max-height: 30px;\n  }\n  .Footer__Items * {\n    padding: 0.25rem 1rem;\n  }\n  @media (max-width: 599px) {\n    .Footer__Items {\n      -webkit-flex-flow: row;\n              flex-flow: row;\n      padding: 0.2rem;\n      font-size: 5px;\n    }\n    ._git,.linked_in{\n      max-height: 20px;\n    }\n  }\n\n  @media (max-width: 601px) {\n  .sect{\n    font-size: 10px;\n  }\n  \n  }\n  \n  \n  \n \n\n\n\n.particle{\n  position:fixed !important;\n  left:0;\n  top:0;\n  width:100%;\n  height:100%;\n}\n\n \n \n.navbar-wrapper{position:fixed;width:80vw;margin-top:10vh;display:-webkit-flex;display:flex;-webkit-align-items:center;align-items:center;-webkit-justify-content:space-between;justify-content:space-between}.navbar-wrapper .name{font-weight:600}@media (max-width: 767px) and (max-width: 1023px){.navbar-wrapper{font-size:0.8rem}}.navbar-wrapper .links-wrapper button{text-decoration:none;padding:10px;font-family:\"Open Sans\";opacity:0.9;transition:all 0.2s ease-in-out;font-size:14px;background-color:transparent;outline:none;border:0px;font-weight:bold;cursor:pointer}.navbar-wrapper .links-wrapper button:hover{opacity:2}@media (min-width: 320px) and (max-width: 424px){.navbar-wrapper .links-wrapper button{font-size:1rem;line-height:10px}}@media (min-width: 425px) and (max-width: 767px){.navbar-wrapper .links-wrapper button{font-size:0.75rem;line-height:10px}}@media (max-width: 767px) and (max-width: 1023px){.navbar-wrapper .links-wrapper button{font-size:0.6rem}}.navbar-wrapper .links-wrapper .active{color:black}.header-wrapper{width:80vw;margin-top:10vh;display:-webkit-flex;display:flex;-webkit-flex-direction:column;flex-direction:column;-webkit-align-items:center;align-items:center}.header-wrapper h2{font-size:1rem;text-align:center}@media (min-width: 320px) and (max-width: 424px){.header-wrapper h2{font-size:14px}}@media (min-width: 425px) and (max-width: 767px){.header-wrapper h2{font-size:16px}}@media (max-width: 767px) and (max-width: 1023px){.header-wrapper h2{font-size:16px}}.header-wrapper .heading-wrapper h1{font-size:4rem;text-align:center;line-height:20px}@media (min-width: 320px) and (max-width: 424px){.header-wrapper .heading-wrapper h1{font-size:1.5rem;line-height:10px}}@media (min-width: 425px) and (max-width: 767px){.header-wrapper .heading-wrapper h1{font-size:1.5rem;line-height:10px}}@media (max-width: 767px) and (max-width: 1023px){.header-wrapper .heading-wrapper h1{font-size:1.9rem}}.header-wrapper .heading-wrapper h3{font-size:2rem;text-align:center;line-height:20px}@media (min-width: 320px) and (max-width: 424px){.header-wrapper .heading-wrapper h3{font-size:1rem;line-height:10px}}@media (min-width: 425px) and (max-width: 767px){.header-wrapper .heading-wrapper h3{font-size:0.75rem;line-height:10px}}@media (max-width: 767px) and (max-width: 1023px){.header-wrapper .heading-wrapper h3{font-size:1rem}}.header-wrapper .heading-wrapper h5{font-size:1rem;text-align:center;line-height:20px}@media (min-width: 320px) and (max-width: 424px){.header-wrapper .heading-wrapper h5{font-size:1rem;line-height:10px}}@media (min-width: 425px) and (max-width: 767px){.header-wrapper .heading-wrapper h5{font-size:0.75rem;line-height:10px}}@media (max-width: 767px) and (max-width: 1023px){.header-wrapper .heading-wrapper h5{font-size:.8rem}}.header-wrapper .heading-wrapper h6{font-size:1rem;text-align:center;line-height:20px}@media (min-width: 320px) and (max-width: 424px){.header-wrapper .heading-wrapper h6{font-size:1rem;line-height:10px}}@media (min-width: 425px) and (max-width: 767px){.header-wrapper .heading-wrapper h6{font-size:0.75rem;line-height:10px}}@media (max-width: 767px) and (max-width: 1023px){.header-wrapper .heading-wrapper h6{font-size:1rem}}.header-wrapper p{width:50%;text-align:center;overflow:hidden}@media (min-width: 320px) and (max-width: 424px){.header-wrapper p{font-size:12px;width:100%}}@media (min-width: 425px) and (max-width: 767px){.header-wrapper p{font-size:12px;width:100%}}@media (max-width: 767px) and (max-width: 1023px){.header-wrapper p{font-size:14px;width:100%}}.MuiInputBase-root.MuiInput-root.MuiInput-underline.options{margin-left:24px;margin-bottom:8px}#fert{margin-top:70px}.section{margin-top:20px}.section h3{font-size:1.7rem;text-align:center}@media (min-width: 320px) and (max-width: 424px){.section h3{font-size:1rem;line-height:10px}}@media (min-width: 425px) and (max-width: 767px){.section h3{font-size:0.75rem;line-height:10px}}@media (max-width: 767px) and (max-width: 1023px){.section h3{font-size:0.85rem}}.about-section{width:80vw;margin-top:5vh;display:-webkit-flex;display:flex;-webkit-flex-direction:row;flex-direction:row;-webkit-justify-content:space-between;justify-content:space-between}@media (min-width: 320px) and (max-width: 424px){.about-section{-webkit-flex-direction:column;flex-direction:column}}@media (min-width: 425px) and (max-width: 767px){.about-section{-webkit-flex-direction:column;flex-direction:column}}@media (min-width: 768px) and (max-width: 1023px){.about-section{-webkit-flex-direction:column;flex-direction:column;-webkit-align-items:center;align-items:center}}.about-section .content{width:50%}@media (min-width: 320px) and (max-width: 424px){.about-section .content{width:100%}}@media (min-width: 425px) and (max-width: 767px){.about-section .content{width:100%}}@media (min-width: 768px) and (max-width: 1023px){.about-section .content{width:100%}}.about-section .content .row1,.about-section .content .row2,.about-section .content .row3{padding:2px 4px;display:-webkit-flex;display:flex;-webkit-flex-direction:row;flex-direction:row}.about-section .content .MuiInputBase-root.MuiInput-root.MuiInput-underline.MuiInputBase-formControl.MuiInput-formControl{box-shadow:2px 4px 3px #e2e2e2}@media (min-width: 768px) and (max-width: 1023px){.about-section .content p{text-align:center}}.about-section .image-wrapper{width:50%;display:-webkit-flex;display:flex;-webkit-align-items:center;align-items:center;-webkit-justify-content:center;justify-content:center;overflow:hidden}@media (min-width: 320px) and (max-width: 424px){.about-section .image-wrapper{width:100%}}@media (min-width: 425px) and (max-width: 767px){.about-section .image-wrapper{width:100%}}@media (min-width: 768px) and (max-width: 1023px){.about-section .image-wrapper{width:100%}}body{margin:0;padding:0;overflow-y:scroll}.section{width:100vw;height:auto;overflow:hidden}.container{width:100%;height:100%;display:-webkit-flex;display:flex;-webkit-flex-direction:column;flex-direction:column;-webkit-align-items:center;align-items:center;-webkit-justify-content:center;justify-content:center}.primary-btn{margin:10px;padding:10px;background-color:black;color:white;border:0px;transition:all 0.2s ease-in-out;text-decoration:none;cursor:pointer}.primary-btn:hover{-webkit-transform:scale(1.1);transform:scale(1.1)}@media only screen and (max-width: 1024px){h3{font-size:1.5rem}}\n\n","\n\n* {\n    font-family: \"Montserrat\";\n    \n  }\n  /* width */\n  ::-webkit-scrollbar {\n  width: 10px;\n  }\n  \n  /* Track */\n  ::-webkit-scrollbar-track {\n  background: #ffffff; \n  }\n  \n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n  background: rgb(255, 255, 255); \n  }",".Footer {\n    box-sizing: border-box;\n    min-height: 34px;\n    width: 100%;\n    padding: 1rem 15px;\n  \n  \n    bottom: 0;\n  \n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n    align-items: center;\n  \n    text-align: center;\n    word-spacing: 0.25rem;\n  \n    background-color: var(--background-color-2);\n    box-shadow: 0px -2px 1px -1px rgba(0, 0, 0, 0.2);\n  \n    transition: background-color 500ms ease-in-out;\n  }\n  \n  .Footer__Items {\n   \n    display:flex;\n    flex-direction: row;\n    justify-content: flex-end;\n  }\n  ._git{\n    max-height: 30px;\n  }\n  .linked_in{\n    max-height: 30px;\n  }\n  .Footer__Items * {\n    padding: 0.25rem 1rem;\n  }\n  @media (max-width: 599px) {\n    .Footer__Items {\n      flex-flow: row;\n      padding: 0.2rem;\n      font-size: 5px;\n    }\n    ._git,.linked_in{\n      max-height: 20px;\n    }\n  }\n\n  @media (max-width: 601px) {\n  .sect{\n    font-size: 10px;\n  }\n  \n  }\n  \n  \n  \n ","\n\n\n.particle{\n  position:fixed !important;\n  left:0;\n  top:0;\n  width:100%;\n  height:100%;\n}\n\n \n ",".navbar-wrapper {\n  position:fixed;\n    width: 80vw;\n    margin-top: 10vh;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    .name {  \n      font-weight: 600;\n    }\n\n    \n    @include media(\"<tablet\", \"<desktop\",) {\n      font-size: 0.8rem;\n    }\n    .links-wrapper {\n      button {\n        text-decoration: none;\n        padding: 10px;\n        font-family: \"Open Sans\";\n        opacity: 0.9;\n        transition: all 0.2s ease-in-out;\n        font-size: 14px;\n        background-color: transparent;\n        outline: none;\n        border: 0px;\n        font-weight: bold;\n        cursor: pointer;\n        &:hover {\n          opacity: 2;\n        }\n        @include media(\">=phone\", \"<lgphone\") {\n          font-size: 1rem;\n          line-height: 10px;\n        }\n        @include media(\">=lgphone\", \"<tablet\") {\n          font-size: 0.75rem;\n          line-height: 10px;\n        }\n        @include media(\"<tablet\", \"<desktop\",) {\n          font-size: 0.6rem;\n        }\n      }\n      .active {\n        color: black;\n      }\n    }\n  }","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  \"phone\": 320px,\n  \"lgphone\": 425px,\n  \"tablet\": 768px,\n  \"desktop\": 1024px,\n  \"smdesktop\": 1280px,\n  \"mddesktop\": 1440px,\n  \"lgdesktop\": 1920px,\n  \"4k\": 2560px,\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  \"screen\": \"screen\",\n  \"print\": \"print\",\n  \"handheld\": \"handheld\",\n  \"landscape\": \"(orientation: landscape)\",\n  \"portrait\": \"(orientation: portrait)\",\n  \"retina2x\":\n    \"(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)\",\n  \"retina3x\":\n    \"(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)\",\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  \"px\": 1,\n  \"em\": 0.01,\n  \"rem\": 0.1,\n  \"\": 0,\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: \"desktop\" !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: (\"screen\", \"portrait\", \"landscape\") !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists(\"at-error\") {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {\n  }\n}\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {\n}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log(\"`#{$im-no-media-breakpoint}` is not a valid breakpoint.\") {\n    }\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == \"max\" and $value <= $no-media-breakpoint-value) or\n        ($prefix == \"min\" and $value > $no-media-breakpoint-value)\n      {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in (\">=\", \">\", \"<=\", \"<\", \"≥\", \"≤\") {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log(\"No operator found in `#{$expression}`.\");\n}\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: \"width\";\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index((\"<\", \"<=\", \"≤\"), $operator), \"max\", \"min\");\n}\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log(\"Unknown unit `#{unit($value)}`.\");\n  }\n\n  @if $operator == \">\" {\n    $value: $value + $interval;\n  } @else if $operator == \"<\" {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return \"(#{$prefix}-#{$dimension}: #{$value})\";\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == \"number\" {\n    @return $value;\n  } @else if type-of($value) != \"string\" {\n    $_: im-log(\"Value for `to-number` should be a number or a string.\");\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == \"-\");\n  $numbers: (\n    \"0\": 0,\n    \"1\": 1,\n    \"2\": 2,\n    \"3\": 3,\n    \"4\": 4,\n    \"5\": 5,\n    \"6\": 6,\n    \"7\": 7,\n    \"8\": 8,\n    \"9\": 9,\n  );\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == \"+\" or $first-character == \"-\") {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not(index(map-keys($numbers), $character) or $character == \".\") {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i));\n    }\n\n    @if $character == \".\" {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: (\n    \"px\": 1px,\n    \"cm\": 1cm,\n    \"mm\": 1mm,\n    \"%\": 1%,\n    \"ch\": 1ch,\n    \"pc\": 1pc,\n    \"in\": 1in,\n    \"em\": 1em,\n    \"rem\": 1rem,\n    \"pt\": 1pt,\n    \"ex\": 1ex,\n    \"vw\": 1vw,\n    \"vh\": 1vh,\n    \"vmin\": 1vmin,\n    \"vmax\": 1vmax,\n  );\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log(\"Invalid unit `#{$unit}`.\");\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge(\n    $media-expressions,\n    $tweak-media-expressions\n  ) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\n  {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}","\n\n.header-wrapper {\n  \n    width: 80vw;\n    margin-top: 10vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  \n    h2 {\n      font-size: 1rem;\n      text-align: center;\n      @include media(\">=phone\", \"<lgphone\") {\n        font-size: 14px;\n      }\n      @include media(\">=lgphone\", \"<tablet\") {\n        font-size: 16px;\n      }\n      @include media(\"<tablet\", \"<desktop\") {\n        font-size: 16px;\n      }\n    }\n    .heading-wrapper {\n      h1 {\n        font-size: 4rem;\n        text-align: center;\n        line-height: 20px;\n        @include media(\">=phone\", \"<lgphone\") {\n          font-size: 1.5rem;\n          line-height: 10px;\n        }\n        @include media(\">=lgphone\", \"<tablet\") {\n          font-size: 1.5rem;\n          line-height: 10px;\n        }\n        @include media(\"<tablet\", \"<desktop\") {\n          font-size: 1.9rem;\n        }\n      }\n      h3 {\n        font-size: 2rem;\n        text-align: center;\n        line-height: 20px;\n        @include media(\">=phone\", \"<lgphone\") {\n          font-size: 1rem;\n          line-height: 10px;\n        }\n        @include media(\">=lgphone\", \"<tablet\") {\n          font-size: 0.75rem;\n          line-height: 10px;\n        }\n        @include media(\"<tablet\", \"<desktop\",) {\n          font-size: 1rem;\n        }\n      }\n      h5 {\n        font-size: 1rem;\n        text-align: center;\n        line-height: 20px;\n        @include media(\">=phone\", \"<lgphone\") {\n          font-size: 1rem;\n          line-height: 10px;\n        }\n        @include media(\">=lgphone\", \"<tablet\") {\n          font-size: 0.75rem;\n          line-height: 10px;\n        }\n        @include media(\"<tablet\", \"<desktop\") {\n          font-size: .8rem;\n        }\n      }\n      h6 {\n        font-size: 1rem;\n        text-align: center;\n        line-height: 20px;\n        @include media(\">=phone\", \"<lgphone\") {\n          font-size: 1rem;\n          line-height: 10px;\n        }\n        @include media(\">=lgphone\", \"<tablet\") {\n          font-size: 0.75rem;\n          line-height: 10px;\n        }\n        @include media(\"<tablet\", \"<desktop\") {\n          font-size: 1rem;\n        }\n      }\n    }\n    p {\n      width: 50%;\n      text-align: center;\n      overflow: hidden;\n      @include media(\">=phone\", \"<lgphone\") {\n        font-size: 12px;\n        width: 100%;\n      }\n      @include media(\">=lgphone\", \"<tablet\") {\n        font-size: 12px;\n        width: 100%;\n      }\n      @include media(\"<tablet\", \"<desktop\") {\n        font-size: 14px;\n        width: 100%;\n      }\n    }\n  }","\n.MuiInputBase-root.MuiInput-root.MuiInput-underline.options {\n  margin-left: 24px;\n  margin-bottom: 8px;\n}\n\n#fert{\n  margin-top: 70px;\n}\n.section{\n  margin-top: 20px;\n  h3 {\n      font-size: 1.7rem;  \n    text-align: center;\n    @include media(\">=phone\", \"<lgphone\") {\n      font-size: 1rem;\n      line-height: 10px;\n    }\n    @include media(\">=lgphone\", \"<tablet\") {\n      font-size: 0.75rem;\n      line-height: 10px;\n    }\n    @include media(\"<tablet\", \"<desktop\") {\n      font-size: 0.85rem;\n     }\n  }\n}\n      \n.about-section {\n    width: 80vw;\n    margin-top: 5vh;\n    display: flex;\n   flex-direction: row;\n    justify-content: space-between;\n    @include media(\">=phone\", \"<lgphone\") {\n      flex-direction: column;\n    }\n    @include media(\">=lgphone\", \"<tablet\") {\n      flex-direction: column;\n    }\n    @include media(\">=tablet\", \"<desktop\") {\n      flex-direction: column;\n      align-items: center;\n    }\n    .content {\n      width: 50%;\n      @include media(\">=phone\", \"<lgphone\") {\n        width: 100%;\n      }\n      @include media(\">=lgphone\", \"<tablet\") {\n        width: 100%;\n      }\n      @include media(\">=tablet\", \"<desktop\") {\n        width: 100%;\n      }\n  \n \n.row1,.row2,.row3{\n    padding:2px 4px;\n    display: flex;\n    flex-direction: row;\n}\n.MuiInputBase-root.MuiInput-root.MuiInput-underline.MuiInputBase-formControl.MuiInput-formControl {\n    box-shadow: 2px 4px 3px #e2e2e2;\n\n}\n\n      p {\n        @include media(\">=tablet\", \"<desktop\") {\n          text-align: center;\n        }\n      }\n    }\n    .image-wrapper {\n      width: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      overflow: hidden;\n      @include media(\">=phone\", \"<lgphone\") {\n        width: 100%;\n      }\n      @include media(\">=lgphone\", \"<tablet\") {\n        width: 100%;\n      }\n      @include media(\">=tablet\", \"<desktop\") {\n        width: 100%;\n      }\n    }\n  }","@charset \"utf-8\";\n@import \"./include-media.scss\";\n@import url(\"https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Open+Sans&display=swap\");\n\n/// Navbar\n@import \"./NavBar.scss\";\n//header\n@import \"./Header.scss\";\n//crop\n@import \"./Crop.scss\";\n\n\n  body {\n    margin: 0;\n    padding: 0;\n    overflow-y: scroll;    \n  }\n  \n  .section {\n    width: 100vw;\n    height: auto;\n    overflow: hidden;\n  }\n  \n  .container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  .primary-btn {\n    margin: 10px;\n    padding: 10px;\n    background-color: black;\n    color: white;\n    border: 0px;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n    cursor: pointer;\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n\n  @media only screen and (max-width: 1024px) {\n    h3 {\n      font-size: 1.5rem;\n    }\n  }"]}